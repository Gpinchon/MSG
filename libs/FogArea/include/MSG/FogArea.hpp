#pragma once

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include <MSG/Core/Property.hpp>
#include <MSG/Shape.hpp>

#include <vector>

////////////////////////////////////////////////////////////////////////////////
// Forward Declaration
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class Declaration
////////////////////////////////////////////////////////////////////////////////
namespace MSG {
class FogArea : public ShapeCombination {
    /**
     * @brief G phase function describes how much forward (g<0) or backward (g > 0) light scatters around.
     * Valid range : [-1, 1]
     */
    PROPERTY(float, PhaseG, 0.75);
    PROPERTY(float, Extinction, 0.02f);
    PROPERTY(glm::vec3, Scattering, 1.f);
    PROPERTY(glm::vec3, Emissive, 0.f);
    PROPERTY(float, AttenuationExp, 1.f);
};
}
