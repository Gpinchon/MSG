#pragma once

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include <Renderer/Handles.hpp>
#include <Renderer/Structs.hpp>

////////////////////////////////////////////////////////////////////////////////
// Forward declarations
////////////////////////////////////////////////////////////////////////////////
namespace TabGraph::SG {
struct Image;
}

////////////////////////////////////////////////////////////////////////////////
// Class definition
////////////////////////////////////////////////////////////////////////////////
namespace TabGraph::Renderer::RenderBuffer {
Handle Create(
    const Renderer::Handle& a_Renderer,
    const CreateRenderBufferInfo& a_Info);
void UploadImage(
    const Handle& a_TargetRenderBuffer,
    const SG::Image& a_SourceImage);
void DownloadImage(
    const Handle& a_SourceRenderBuffer,
    const SG::Image& a_TargetImage);
//@return the image corresponding to the RenderBuffer's current state
std::shared_ptr<SG::Image> GetImage(const Handle& a_RenderBuffer);
}
